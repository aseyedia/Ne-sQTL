gene_list <- genes(TxDb.Hsapiens.UCSC.hg19.knownGene) %>%
as.data.table()
gene_list[, subjectHits := .I]
gtp <- fread("file:///D:/Dropbox/Dropbox/GitHub/neanderthal-sqtl/scratch/LIVER.permutations_full.txt.gz") %>%
setnames(., c("intron_cluster", "chrom", "pheno_start", "pheno_end",
"strand", "total_cis", "distance", "variant_id", "variant_chrom",
"var_start", "var_end", "df", "dummy", "param_1", "param_2",
"p", "beta", "emp_p", "adj_p")) %>%
setorder(., adj_p)
gtp[, qval := qvalue(gtp$adj_p)$qvalue]
neand <- fread("file:///D:/Dropbox/Dropbox/GitHub/neanderthal-sqtl/analysis/SPRIME/sprime_calls.txt]")[vindija_match == "match" | altai_match == "match"] %>%
mutate(., var_id_1 = paste(CHROM, POS, REF, ALT, "b37", sep = "_")) %>%
as.data.table()
neand_list <- c(neand$var_id_1, neand$var_id_2)
gtp[, is_neand := variant_id %in% neand_list]
gtp[qval < 0.1 & is_neand == TRUE]
coords_gr <- gtp[, c("chrom", "pheno_start", "pheno_end")] %>%
mutate(., chrom = paste0("chr", chrom)) %>%
makeGRangesFromDataFrame
olaps <- findOverlaps(coords_gr, genes(TxDb.Hsapiens.UCSC.hg19.knownGene)) %>%
as.data.table()
gtp[, queryHits := .I]
gtp <- gtp[olaps, on = "queryHits", nomatch = 0]
gtp <- gtp[gene_list, on = "subjectHits", nomatch = 0]
setorder(gtp, adj_p)
table <- gtp[qval < 0.1 & is_neand == TRUE]
library(data.table)
library(tidyverse)
library(Homo.sapiens)
library(qqman)
library(qvalue)
gene_list <- genes(TxDb.Hsapiens.UCSC.hg19.knownGene) %>%
as.data.table()
gene_list[, subjectHits := .I]
gtp <- fread("file:///D:/Dropbox/Dropbox/GitHub/neanderthal-sqtl/scratch/LIVER.permutations_full.txt.gz") %>%
setnames(., c("intron_cluster", "chrom", "pheno_start", "pheno_end",
"strand", "total_cis", "distance", "variant_id", "variant_chrom",
"var_start", "var_end", "df", "dummy", "param_1", "param_2",
"p", "beta", "emp_p", "adj_p")) %>%
setorder(., adj_p)
gtp[, qval := qvalue(gtp$adj_p)$qvalue]
neand <- fread("file:///D:/Dropbox/Dropbox/GitHub/neanderthal-sqtl/analysis/SPRIME/sprime_calls.txt]")[vindija_match == "match" | altai_match == "match"] %>%
mutate(., var_id_1 = paste(CHROM, POS, REF, ALT, "b37", sep = "_")) %>%
as.data.table()
neand_list <- c(neand$var_id_1, neand$var_id_2)
gtp[, is_neand := variant_id %in% neand_list]
gtp[qval < 0.1 & is_neand == TRUE]
coords_gr <- gtp[, c("chrom", "pheno_start", "pheno_end")] %>%
mutate(., chrom = paste0("chr", chrom)) %>%
makeGRangesFromDataFrame
olaps <- findOverlaps(coords_gr, genes(TxDb.Hsapiens.UCSC.hg19.knownGene)) %>%
as.data.table()
gtp[, queryHits := .I]
gtp <- gtp[olaps, on = "queryHits", nomatch = 0]
gtp <- gtp[gene_list, on = "subjectHits", nomatch = 0]
setorder(gtp, adj_p)
table <- gtp[qval < 0.1 & is_neand == TRUE]
setwd("~/Documents/GitHub/neand_sQTL/scratch/")
#!/usr/bin/env Rscript
require("data.table")
# arg 1 is leafcutter PCs, arg 2 is GTEx covariate file for tissue, 3 is tissue_table.txt
args = commandArgs(trailingOnly=TRUE)
library("data.table")
#leafcut <- fread(args[1], colClasses = "character")
leafcut <- fread(as.character("Ne-sQTL_perind.counts.gz.PCs"))
#gtexPC <- fread(args[2], colClasses = "character")
gtexPC <- fread("GTEx_Analysis_v7_eQTL_covariates/Whole_Blood.v7.covariates.txt")
#gtexPC <- fread(args[2], colClasses = "character")
gtexPC <- fread("Whole_Blood.v7.covariates.txt")
#gtexPC <- fread(args[2], colClasses = "character")
gtexPC <- fread("Adipose_Subcutaneous.v7.covariates.txt")
#lookup <- fread(args[3], colClasses = "character")
lookup <- fread("tissue_table.txt")
# make the use of "id" header standard
setnames(gtexPC, "ID", "id")
# making sure our leafcutter friends have the right header names
ind <- match(names(leafcut), lookup$Run)
names(leafcut) <- lookup$Sample_Name[ind]
# concatenate; fill missing values with na, but then remove
out = rbind(leafcut,gtexPC, use.names=T, fill=T)
# omit NA's with a function that only works on rows
out <- t(na.omit(t(out)))
tissue = tools::file_path_sans_ext(basename(args[2]))
outfile <- gsub(" ", "", paste(tissue, "_output.txt"), fixed = TRUE)
write.table(out, file = outfile, quote = F, sep= "\t", eol = "\r\n", row.names = F)
View(out)
View(lookup)
# making sure our leafcutter friends have the right header names
ind <- match(names(leafcut), lookup$Sample_Name)
names(leafcut) <- lookup$submitted_subject_id[ind]
# concatenate; fill missing values with na, but then remove
out = rbind(leafcut,gtexPC, use.names=T, fill=T)
# omit NA's with a function that only works on rows
out <- t(na.omit(t(out)))
tissue = tools::file_path_sans_ext(basename(args[2]))
outfile <- gsub(" ", "", paste(tissue, "_output.txt"), fixed = TRUE)
write.table(out, file = outfile, quote = F, sep= "\t", eol = "\r\n", row.names = F)
View(out)
