libPaths()
libpaths
library(package)
libPath
libPaths
libPath()
libPaths()
.libPaths
.Library
.Lib
Library
.Library.site
.libPaths()
importIntoEnv()
exit
exit()
q()
.libPaths()
install.packages("swirl")
installed.packages("devtools")
if (!require("devtools")) install.packages("devtools", repos='http://cran.us.r-project.org')
devtools::install_github("davidaknowles/leafcutter/leafcutter")
if (!require("devtools")) install.packages("devtools", repos='http://cran.us.r-project.org')
devtools::install_github("davidaknowles/leafcutter/leafcutter")
install.packages("rstan")
install.packages("rstan")
install.packages("Eigen")
install.packages("Dense")
install.packages("Eigen/Dense")
install.packages("rstan")
clear
l
if (!require("devtools")) install.packages("devtools", repos='http://cran.us.r-project.org')
devtools::install_github("davidaknowles/leafcutter/leafcutter", dependencies = TRUE)
install.packages("swirl")
getwd()
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
?rep
setwd("Documents/GitHub/Ne-sQTL/scratch/")
# The GTEX-supplied covariates are all only subject ID, whereas I want them all to have SAMPLE IDs. I'm going to fix this
# by checking to see if the tissue type found in the covariate file name and the subject ID match in each row of tissue_table.txt. If there
# is a match, the column name in the GTEX covariate file will be renamed to the sample ID. This /should/ happen for all entries.
require("data.table")
require("R.utils")
args = commandArgs(trailingOnly=TRUE)
# args[1] is each covariate file launched as part of a batch script
# The GTEX-supplied covariates are all only subject ID, whereas I want them all to have SAMPLE IDs. I'm going to fix this
# by checking to see if the tissue type found in the covariate file name and the subject ID match in each row of tissue_table.txt. If there
# is a match, the column name in the GTEX covariate file will be renamed to the sample ID. This /should/ happen for all entries.
require("data.table")
require("R.utils")
args = commandArgs(trailingOnly=TRUE)
# args[1] is each covariate file launched as part of a batch script
GTEXcov <- fread("GTEx_Analysis_v7_eQTL_covariates/Adipose_Visceral_Omentum.v7.covariates.txt")
tisstabl <- fread("tissue_table.txt")
View(GTEXcov)
View(tisstabl)
# The GTEX-supplied covariates are all only subject ID, whereas I want them all to have SAMPLE IDs. I'm going to fix this
# by checking to see if the tissue type found in the covariate file name and the subject ID match in each row of tissue_table.txt. If there
# is a match, the column name in the GTEX covariate file will be renamed to the sample ID. This /should/ happen for all entries.
require("data.table")
require("R.utils")
args = commandArgs(trailingOnly=TRUE)
# args[1] is each covariate file launched as part of a batch script
GTEXcov <- fread("GTEx_Analysis_v7_eQTL_covariates/Adipose_Visceral_Omentum.v7.covariates.txt")
tisstabl <- fread("tissue_table.txt")
ind <- match(names(GTEXcov), tisstabl$submitted_subject_id)
names(GTEXcov) <- tisstabl$Sample_Name[ind]
View(GTEXcov)
