install.packages("Mplus")
library(data.table)
library(GenomicRanges)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.10")
version
# installing/loading the latest installr package:
install.packages("installr"); library(installr) # install+load installr
updateR() # updating R.
library(data.table)
library(GenomicRanges)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.10")
library(data.table)
library(GenomicRanges)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GenomicRanges")
install.packages("data.table")
geneRanges <-
function(db, column="ENTREZID")
{
g <- genes(db, columns=column)
col <- mcols(g)[[column]]
genes <- granges(g)[rep(seq_along(g), elementLengths(col))]
mcols(genes)[[column]] <- as.character(unlist(col))
genes
}
splitColumnByOverlap <-
function(query, subject, column="ENTREZID", ...)
{
olaps <- findOverlaps(query, subject, ...)
f1 <- factor(subjectHits(olaps),
levels=seq_len(subjectLength(olaps)))
splitAsList(mcols(query)[[column]][queryHits(olaps)], f1)
}
getwd()
setwd("D:/github/neand_sQTL/results/")
dt <- fread("loosenedRestrictions.txt", header = F)
library(data.table)
library(GenomicRanges)
dt <- fread("loosenedRestrictions.txt", header = F)
View(dt)
dt <- fread("loosenedRestrictions.txt", header = T)
library(tidyverse)
install.packages("library(stringr)")
install.packages("stringr")
library(stringer)
library(stringr)
install.packages("tidyverse")
?str_split_fixed
dt <- fread("loosenedRestrictions.txt", header = T) %>%
str_split_fixed(., "_", 3)
dt <- fread("loosenedRestrictions.txt", header = T)
str_split_fixed(dt$transcript_id, "_", 3)
dt <- fread("loosenedRestrictions.txt", header = T)%>%
str_split_fixed(.$transcript_id, "_", 3)
coords <- str_split_fixed(dt$transcript_id, "_", 3)
View(coords)
coords <- str_split_fixed(dt$transcript_id, "_", 3) %>%
names(.) <- c("chr", "start", "stop")
coords <- str_split_fixed(dt$transcript_id, "_", 3) %>%
names(.) <- c("chr", "start", "stop")
coords <- str_split_fixed(dt$transcript_id, "_", 3) %>%
names()
coords <- str_split_fixed(dt$transcript_id, "_", 3)
names(coords)
names(coords) <- c("chr", "start", "stop")
View(coords)
coords
coords <- as.data.table(str_split_fixed(dt$transcript_id, "_", 3))
names(coords) <- c("chr", "start", "stop")
coords
